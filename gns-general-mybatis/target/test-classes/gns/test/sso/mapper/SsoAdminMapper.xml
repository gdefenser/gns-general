<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gns.test.sso.dao.SsoAdminMapper">
  <resultMap id="BaseResultMap" type="gns.test.sso.entity.SsoAdmin">
    <id column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="admin_no" jdbcType="VARCHAR" property="adminNo" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="password_salt" jdbcType="VARCHAR" property="passwordSalt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_ts" jdbcType="TIMESTAMP" property="createTs" />
  </resultMap>
  <sql id="Base_Column_List">
    admin_id, admin_no, admin_name, password_salt, password, create_ts
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sso_admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sso_admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="gns.test.sso.entity.SsoAdmin">
    insert into sso_admin (admin_id, admin_no, admin_name, 
      password_salt, password, create_ts
      )
    values (#{adminId,jdbcType=INTEGER}, #{adminNo,jdbcType=VARCHAR}, #{adminName,jdbcType=VARCHAR}, 
      #{passwordSalt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createTs,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="gns.test.sso.entity.SsoAdmin">
    insert into sso_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="adminNo != null">
        admin_no,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="passwordSalt != null">
        password_salt,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTs != null">
        create_ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminNo != null">
        #{adminNo,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTs != null">
        #{createTs,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="gns.test.sso.entity.SsoAdmin">
    update sso_admin
    <set>
      <if test="adminNo != null">
        admin_no = #{adminNo,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="passwordSalt != null">
        password_salt = #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTs != null">
        create_ts = #{createTs,jdbcType=TIMESTAMP},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="gns.test.sso.entity.SsoAdmin">
    update sso_admin
    set admin_no = #{adminNo,jdbcType=VARCHAR},
      admin_name = #{adminName,jdbcType=VARCHAR},
      password_salt = #{passwordSalt,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_ts = #{createTs,jdbcType=TIMESTAMP}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
</mapper>